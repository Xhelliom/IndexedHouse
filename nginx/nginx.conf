worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream web {
        server web:3000;
    }

    upstream api {
        server api:4000;
    }

    upstream minio_console {
        server minio:9001;
    }

    upstream minio_s3 {
        server minio:9000;
    }

    server {
        listen 80;
        server_name _;

        # Frontend Next.js
        location / {
            proxy_pass http://web;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend API
        location /api/ {
            rewrite ^/api/?(.*)$ /$1 break;
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # MinIO Console (optionnel: exposer via /minio)
        location /minio/ {
            rewrite ^/minio/?(.*)$ /$1 break;
            proxy_pass http://minio_console;
            proxy_set_header Host $host;
        }

        # MinIO S3 API (optionnel: si besoin public)
        location /s3/ {
            rewrite ^/s3/?(.*)$ /$1 break;
            proxy_pass http://minio_s3;
            proxy_set_header Host $host;
        }
    }
}


